<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="block_8c" kind="file" language="C++">
    <compoundname>block.c</compoundname>
    <includes local="no">SDL2/SDL.h</includes>
    <includes refid="block_8h" local="no">block.h</includes>
    <includes refid="erreur_8h" local="no">erreur.h</includes>
    <includes refid="outils__SDL_8h" local="no">outils_SDL.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="279">
        <label>stdlib.h</label>
      </node>
      <node id="272">
        <label>src/block.c</label>
        <link refid="block_8c"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>outils_SDL.h</label>
        <link refid="outils__SDL_8h_source"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>couleurs.h</label>
        <link refid="couleurs_8h_source"/>
      </node>
      <node id="273">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="276">
        <label>erreur.h</label>
        <link refid="erreur_8h"/>
      </node>
      <node id="278">
        <label>stdio.h</label>
      </node>
      <node id="274">
        <label>block.h</label>
        <link refid="block_8h"/>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" prot="public" static="no" mutable="no">
        <type><ref refid="structt__block__type" kindref="compound">t_block_type</ref></type>
        <definition>blocks</definition>
        <argsstring>[NB_BLOCK]</argsstring>
        <name>blocks</name>
        <initializer>= {{AIR, &quot;air&quot;, 0, NULL, NOIR, NULL},
                                 {HERBE, &quot;herbe&quot;, 5, &quot;./IMG/texture/herbe.png&quot;, VERT, NULL},
                                 {TERRE, &quot;terre&quot;, 10, &quot;./IMG/texture/terre.png&quot;, MARRON, NULL},
                                 {EAU, &quot;eau&quot;, 0, &quot;./IMG/texture/eau.png&quot;, BLEU, NULL},
                                 {SABLE, &quot;sable&quot;, 5, &quot;./IMG/texture/sable.png&quot;, JAUNE, NULL},
                                 {FEUILLE, &quot;feuille&quot;, 3, &quot;./IMG/texture/feuille.png&quot;, VERT, NULL},
                                 {BOIS, &quot;bois&quot;, 15, &quot;./IMG/texture/tronc.png&quot;, MARRON, NULL},
                                 {ROCHE, &quot;roche&quot;, 50, &quot;./IMG/texture/pierre.png&quot;, GRIS, NULL},
                                 {NEIGE, &quot;neige&quot;, 3, &quot;./IMG/texture/neige.png&quot;, BLANC, NULL},
                                 {GLACE, &quot;glace&quot;, 10, &quot;./IMG/texture/glace.png&quot;, CYAN, NULL},
                                 {GRAVIER, &quot;gravier&quot;, 20, &quot;./IMG/texture/gravier.png&quot;, GRIS, NULL}}</initializer>
        <briefdescription>
<para>tableau de tous les blocks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block.c" line="19" column="1" bodyfile="src/block.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="block_8c_1aee81cee5a3a132e9769b9520c3e2f415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * BLOCK_GetTexture_term</definition>
        <argsstring>(int id)</argsstring>
        <name>BLOCK_GetTexture_term</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Chercher la texture d&apos;un block par rapport a son id et renvoie la texture terminal de ce block. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>C&apos;est le chiffre qui represente la texture rechercher </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>la texture (une char * pour le terminal) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block.c" line="37" column="1" bodyfile="src/block.c" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1abfc4c7532ca8f494ffa3e70e5aa3bb3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDL_Texture *</type>
        <definition>SDL_Texture * BLOCK_GetTexture_sdl</definition>
        <argsstring>(int id)</argsstring>
        <name>BLOCK_GetTexture_sdl</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Chercher la texture d&apos;un block par rapport a son id et renvoie la texture terminal de ce block. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>C&apos;est le chiffre qui represente la texture rechercher </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Renvoie la texture SDL2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block.c" line="51" column="1" bodyfile="src/block.c" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a3cf25f3b940c6b141541cf8ab24c77fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK_afficher_type</definition>
        <argsstring>(t_block_type b)</argsstring>
        <name>BLOCK_afficher_type</name>
        <param>
          <type><ref refid="structt__block__type" kindref="compound">t_block_type</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block.c" line="60" column="1" bodyfile="src/block.c" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a714da3e92b414ba4736438cf0600b02d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK_afficher_coord</definition>
        <argsstring>(t_block b)</argsstring>
        <name>BLOCK_afficher_coord</name>
        <param>
          <type><ref refid="structblock__s" kindref="compound">t_block</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block.c" line="65" column="1" bodyfile="src/block.c" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a3c5ac45fcd31e6d01cffd148111d54e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur BLOCK_CreateTexture_sdl</definition>
        <argsstring>(SDL_Renderer *renderer)</argsstring>
        <name>BLOCK_CreateTexture_sdl</name>
        <param>
          <type>SDL_Renderer *</type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block.c" line="67" column="1" bodyfile="src/block.c" bodystart="67" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="block_8c_1a0c8b13797355fd4296b6ef7cb71d0862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur BLOCK_DestroyTexture_sdl</definition>
        <argsstring>(SDL_Renderer *renderer)</argsstring>
        <name>BLOCK_DestroyTexture_sdl</name>
        <param>
          <type>SDL_Renderer *</type>
          <declname>renderer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/block.c" line="80" column="1" bodyfile="src/block.c" bodystart="80" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Fonction sur les blocks. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>{Maxence.D} </para></simplesect>
<simplesect kind="version"><para>0.1 </para></simplesect>
<simplesect kind="date"><para>10 mars 2019 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="block_8h" kindref="compound">block.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="erreur_8h" kindref="compound">erreur.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;outils_SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="structt__block__type" kindref="compound">t_block_type</ref><sp/><ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[NB_BLOCK]<sp/>=<sp/>{{AIR,<sp/></highlight><highlight class="stringliteral">&quot;air&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>NULL,<sp/>NOIR,<sp/>NULL},</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{HERBE,<sp/></highlight><highlight class="stringliteral">&quot;herbe&quot;</highlight><highlight class="normal">,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/herbe.png&quot;</highlight><highlight class="normal">,<sp/>VERT,<sp/>NULL},</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{TERRE,<sp/></highlight><highlight class="stringliteral">&quot;terre&quot;</highlight><highlight class="normal">,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/terre.png&quot;</highlight><highlight class="normal">,<sp/>MARRON,<sp/>NULL},</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{EAU,<sp/></highlight><highlight class="stringliteral">&quot;eau&quot;</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/eau.png&quot;</highlight><highlight class="normal">,<sp/>BLEU,<sp/>NULL},</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{SABLE,<sp/></highlight><highlight class="stringliteral">&quot;sable&quot;</highlight><highlight class="normal">,<sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/sable.png&quot;</highlight><highlight class="normal">,<sp/>JAUNE,<sp/>NULL},</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{FEUILLE,<sp/></highlight><highlight class="stringliteral">&quot;feuille&quot;</highlight><highlight class="normal">,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/feuille.png&quot;</highlight><highlight class="normal">,<sp/>VERT,<sp/>NULL},</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{BOIS,<sp/></highlight><highlight class="stringliteral">&quot;bois&quot;</highlight><highlight class="normal">,<sp/>15,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/tronc.png&quot;</highlight><highlight class="normal">,<sp/>MARRON,<sp/>NULL},</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ROCHE,<sp/></highlight><highlight class="stringliteral">&quot;roche&quot;</highlight><highlight class="normal">,<sp/>50,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/pierre.png&quot;</highlight><highlight class="normal">,<sp/>GRIS,<sp/>NULL},</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{NEIGE,<sp/></highlight><highlight class="stringliteral">&quot;neige&quot;</highlight><highlight class="normal">,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/neige.png&quot;</highlight><highlight class="normal">,<sp/>BLANC,<sp/>NULL},</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{GLACE,<sp/></highlight><highlight class="stringliteral">&quot;glace&quot;</highlight><highlight class="normal">,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/glace.png&quot;</highlight><highlight class="normal">,<sp/>CYAN,<sp/>NULL},</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{GRAVIER,<sp/></highlight><highlight class="stringliteral">&quot;gravier&quot;</highlight><highlight class="normal">,<sp/>20,<sp/></highlight><highlight class="stringliteral">&quot;./IMG/texture/gravier.png&quot;</highlight><highlight class="normal">,<sp/>GRIS,<sp/>NULL}};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="block_8c_1aee81cee5a3a132e9769b9520c3e2f415" kindref="member">BLOCK_GetTexture_term</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NB_BLOCK;<sp/>i++)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].materiau<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_term;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NOIR;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">SDL_Texture<sp/>*<ref refid="block_8c_1abfc4c7532ca8f494ffa3e70e5aa3bb3e" kindref="member">BLOCK_GetTexture_sdl</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NB_BLOCK;<sp/>i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].materiau<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_sdl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BLOCK_afficher_type(<ref refid="structt__block__type" kindref="compound">t_block_type</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;materiau<sp/>:<sp/>%d<sp/>nom<sp/>:<sp/>%s<sp/>resistance<sp/>:<sp/>%d,<sp/>path<sp/>texture<sp/>sdl<sp/>:<sp/>%s<sp/>texture<sp/>dans<sp/>le<sp/>terminal<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>b.materiau,<sp/>b.nom,<sp/>b.resistance,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.texture_path_sdl,<sp/>b.texture_term);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BLOCK_afficher_coord(<ref refid="structblock__s" kindref="compound">t_block</ref><sp/>b)<sp/>{<sp/>printf(</highlight><highlight class="stringliteral">&quot;id<sp/>:<sp/>%d<sp/>,<sp/>x<sp/>:<sp/>%d<sp/>,<sp/>y<sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>b.id,<sp/>b.x,<sp/>b.y);<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">t_erreur<sp/>BLOCK_CreateTexture_sdl(SDL_Renderer<sp/>*renderer)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NB_BLOCK;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_path_sdl<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Texture<sp/>*texture_block;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Create_IMG_Texture(renderer,<sp/><ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_path_sdl,<sp/>&amp;texture_block);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_sdl<sp/>=<sp/>texture_block;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_sdl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">t_erreur<sp/>BLOCK_DestroyTexture_sdl(SDL_Renderer<sp/>*renderer)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NB_BLOCK;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_sdl<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SDL_DestroyTexture(<ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_sdl);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="block_8c_1a7b1c0c6ee83d49a39b4f5c5205ef4140" kindref="member">blocks</ref>[i].texture_sdl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/block.c"/>
  </compounddef>
</doxygen>
