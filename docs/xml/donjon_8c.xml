<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="donjon_8c" kind="file" language="C++">
    <compoundname>donjon.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="chemin_8h" local="no">chemin.h</includes>
    <includes local="no">SDL2/SDL.h</includes>
    <includes refid="liste_8h" local="no">liste.h</includes>
    <includes refid="erreur_8h" local="no">erreur.h</includes>
    <includes refid="commun_8h" local="no">commun.h</includes>
    <includes refid="donjon_8h" local="no">donjon.h</includes>
    <includes refid="perlin_8h" local="no">perlin.h</includes>
    <includes refid="block_8h" local="no">block.h</includes>
    <includes refid="outils__SDL_8h" local="no">outils_SDL.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="affichage_8h" local="no">affichage.h</includes>
    <includes refid="entite_8h" local="no">entite.h</includes>
    <includes refid="ia_8h" local="no">ia.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="404">
        <label>stdbool.h</label>
      </node>
      <node id="397">
        <label>erreur.h</label>
        <link refid="erreur_8h"/>
      </node>
      <node id="402">
        <label>SDL2/SDL_image.h</label>
      </node>
      <node id="393">
        <label>stdlib.h</label>
      </node>
      <node id="409">
        <label>affichage.h</label>
        <link refid="affichage_8h"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
      </node>
      <node id="410">
        <label>ia.h</label>
        <link refid="ia_8h"/>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
      <node id="405">
        <label>perlin.h</label>
        <link refid="perlin_8h"/>
      </node>
      <node id="406">
        <label>block.h</label>
        <link refid="block_8h"/>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="396">
        <label>liste.h</label>
        <link refid="liste_8h"/>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="408">
        <label>outils_SDL.h</label>
        <link refid="outils__SDL_8h"/>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>src/donjon.c</label>
        <link refid="donjon_8c"/>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="407">
        <label>couleurs.h</label>
        <link refid="couleurs_8h_source"/>
      </node>
      <node id="398">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="401">
        <label>entite.h</label>
        <link refid="entite_8h"/>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
      </node>
      <node id="399">
        <label>commun.h</label>
        <link refid="commun_8h_source"/>
      </node>
      <node id="411">
        <label>math.h</label>
      </node>
      <node id="395">
        <label>chemin.h</label>
        <link refid="chemin_8h"/>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="394">
        <label>stdio.h</label>
      </node>
      <node id="400">
        <label>donjon.h</label>
        <link refid="donjon_8h"/>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
      </node>
      <node id="403">
        <label>SDL2/SDL_ttf.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="donjon_8c_1a50267d552ca6f788254032e40046b770" prot="public" static="no">
        <name>DEPTH</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="27" column="9" bodyfile="src/donjon.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="donjon_8c_1ac9ff5f839e4b37670bc75541206c8cb2" prot="public" static="no">
        <name>TAILLE_SOL</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="28" column="9" bodyfile="src/donjon.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="donjon_8c_1a1b6863064984a11f0679a495308d1dc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur donjon_creer_salle</definition>
        <argsstring>(t_salle_donjon **salle, int x, int y, t_type_salle_donjon type)</argsstring>
        <name>donjon_creer_salle</name>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> **</type>
          <declname>salle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>t_type_salle_donjon</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Fonction qui crée une salle en remplissant ces champs par défault. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>salle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointeur dans lequel on enregistre la salle créé </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Position en X de la salle dans le donjon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Position en Y de la salle dans le donjon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type de la salle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="31" column="1" bodyfile="src/donjon.c" bodystart="166" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1ad98a2f6cd179a68ad0a3b69e75372dbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur donjon_ajout_salle</definition>
        <argsstring>(t_liste *donjon, int taille_donjon, t_entite *joueur)</argsstring>
        <name>donjon_ajout_salle</name>
        <param>
          <type><ref refid="structt__liste" kindref="compound">t_liste</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type>int</type>
          <declname>taille_donjon</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;ajout d&apos;une salle à un donjon. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon dans lequel on veut ajouter la salle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taille_donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Taille du donjon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Joueur qui veut entrer dans le donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="32" column="1" bodyfile="src/donjon.c" bodystart="111" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1aacfd67065226cce8523fca491f7ad9f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int nb_voisin_salle</definition>
        <argsstring>(t_salle_donjon *salle)</argsstring>
        <name>nb_voisin_salle</name>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> *</type>
          <declname>salle</declname>
        </param>
        <briefdescription>
<para>Calcule le nombre de voisin d&apos;une salle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>salle</parametername>
</parameternamelist>
<parameterdescription>
<para>Salle dont on veut connaitre le nombre de voisin </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nombre de voisins de la salle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="33" column="1" bodyfile="src/donjon.c" bodystart="213" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a98f63c788024a13ce933f896ff0894c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur selection_voisin</definition>
        <argsstring>(t_salle_donjon *salle, int *choix)</argsstring>
        <name>selection_voisin</name>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> *</type>
          <declname>salle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>choix</declname>
        </param>
        <briefdescription>
<para>Fonction qui sélectionne de manière pseudo-aléatoire un voisin pour une salle donnée. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>salle</parametername>
</parameternamelist>
<parameterdescription>
<para>Salle dont on veut sélectionner un voisin </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>choix</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointeur de retour sur le choix fait </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="34" column="1" bodyfile="src/donjon.c" bodystart="232" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a4af47ab19e449f7be0189b4354db86a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int chercher_salle</definition>
        <argsstring>(t_liste *donjon, t_entite *joueur)</argsstring>
        <name>chercher_salle</name>
        <param>
          <type><ref refid="structt__liste" kindref="compound">t_liste</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <briefdescription>
<para>Cherche une salle ayant au moins 1 voisin (Slot dans le quelle une autre salle peut être créer) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon dans lequel on recherche la salle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Jour qui veut entrer dans le donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>La position de la salle dans la liste, -1 sinon </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="35" column="1" bodyfile="src/donjon.c" bodystart="275" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a348d3a4b077396c2e33dd5e024e1bf8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur update_voisin</definition>
        <argsstring>(t_liste *donjon, int taille_donjon)</argsstring>
        <name>update_voisin</name>
        <param>
          <type><ref refid="structt__liste" kindref="compound">t_liste</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type>int</type>
          <declname>taille_donjon</declname>
        </param>
        <briefdescription>
<para>Met à jour le tableau des voisins de chaque salle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon dans lequel on veut mettre à jour les salles </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taille_donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Taille du donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="36" column="1" bodyfile="src/donjon.c" bodystart="306" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a789a707ffdb00d34a531912b8ccfd3ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur donjon_creer_structure_salle</definition>
        <argsstring>(t_salle_donjon *salle)</argsstring>
        <name>donjon_creer_structure_salle</name>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> *</type>
          <declname>salle</declname>
        </param>
        <briefdescription>
<para>Crée la structure de la salle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>salle</parametername>
</parameternamelist>
<parameterdescription>
<para>Salle dans laquelle on veut créer une structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="37" column="1" bodyfile="src/donjon.c" bodystart="363" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a955dff1c22c69df0e178786927080c6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void donjon_detruire_salle</definition>
        <argsstring>(t_salle_donjon *salle)</argsstring>
        <name>donjon_detruire_salle</name>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> *</type>
          <declname>salle</declname>
        </param>
        <briefdescription>
<para>Fonction de destruction d&apos;une salle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>salle</parametername>
</parameternamelist>
<parameterdescription>
<para>Salle que l&apos;on veut détruire </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="38" column="1" bodyfile="src/donjon.c" bodystart="853" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a3374e55dda9112b781432928351de1fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur donjon_coord_depart</definition>
        <argsstring>(t_liste *donjon, t_salle_donjon **salle_dep)</argsstring>
        <name>donjon_coord_depart</name>
        <param>
          <type><ref refid="structt__liste" kindref="compound">t_liste</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> **</type>
          <declname>salle_dep</declname>
        </param>
        <briefdescription>
<para>Renvoie la salle de départ. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon dont on veut connaitre la salle de départ </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>salle_dep</parametername>
</parameternamelist>
<parameterdescription>
<para>Double pointeur de retour de la salle de départ </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="39" column="1" bodyfile="src/donjon.c" bodystart="436" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a283d7ff2f5defc294902a5b8e54ab9bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur placer_salle_boss</definition>
        <argsstring>(t_liste *donjon)</argsstring>
        <name>placer_salle_boss</name>
        <param>
          <type><ref refid="structt__liste" kindref="compound">t_liste</ref> *</type>
          <declname>donjon</declname>
        </param>
        <briefdescription>
<para>Place la salle du boss dans la salle la plus éloigné de la salle de départ. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon dans lequel on veut placer la salle du boss </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="40" column="1" bodyfile="src/donjon.c" bodystart="463" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a7b14671f4e701476ec63e5582f4e4da9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur creer_mob</definition>
        <argsstring>(t_salle_donjon *salle, t_entite *joueur)</argsstring>
        <name>creer_mob</name>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> *</type>
          <declname>salle</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <briefdescription>
<para>Fonction de création de mobs par rapport à une salle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>salle</parametername>
</parameternamelist>
<parameterdescription>
<para>Salle dans laquelle on veut créer les mobs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Joueur qui est dans le donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="41" column="1" bodyfile="src/donjon.c" bodystart="690" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a3bf52478e53fbbb8013ba35191efa371" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur salle_joueur</definition>
        <argsstring>(t_liste *donjon, SDL_Rect pos_perso, t_salle_donjon **salle_j)</argsstring>
        <name>salle_joueur</name>
        <param>
          <type><ref refid="structt__liste" kindref="compound">t_liste</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type>SDL_Rect</type>
          <declname>pos_perso</declname>
        </param>
        <param>
          <type><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref> **</type>
          <declname>salle_j</declname>
        </param>
        <briefdescription>
<para>Retourne dans tab la partie du donjon à afficher en fonction du joueur. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon que l&apos;on veut afficher </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos_perso</parametername>
</parameternamelist>
<parameterdescription>
<para>Position du joueur </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>salle_j</parametername>
</parameternamelist>
<parameterdescription>
<para>Double pointeur de retour de la salle dans laquelle se trouve le joueur </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="42" column="1" bodyfile="src/donjon.c" bodystart="499" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a7240cada82c7784b44239ff5c93ef6f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>static t_erreur attaque</definition>
        <argsstring>(t_entite *attaquant, t_entite *cible)</argsstring>
        <name>attaque</name>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>attaquant</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>cible</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;attaque d&apos;une entité sur une autre. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attaquant</parametername>
</parameternamelist>
<parameterdescription>
<para>Entité qui veut attaquer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cible</parametername>
</parameternamelist>
<parameterdescription>
<para>Entité ciblé par l&apos;attaque </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code Erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="43" column="1" bodyfile="src/donjon.c" bodystart="756" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1af7c1579cda78be0576f9de57eea5063a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur donjon_creer</definition>
        <argsstring>(t_donjon **donjon, int nb_salle, t_entite *joueur)</argsstring>
        <name>donjon_creer</name>
        <param>
          <type><ref refid="structt__donjon" kindref="compound">t_donjon</ref> **</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_salle</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <briefdescription>
<para>Fonction permettant de créer un donjon. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointeur dans lequel sera stocké le donjon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_salle</parametername>
</parameternamelist>
<parameterdescription>
<para>Nombre de salle dans le donjon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Joueur voulant entrer dans le donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="53" column="1" bodyfile="src/donjon.c" bodystart="53" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a58610b3b3acb6edfdbdc92ccfbff1a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur donjon_afficher_Term</definition>
        <argsstring>(t_donjon *donjon, t_entite *joueur)</argsstring>
        <name>donjon_afficher_Term</name>
        <param>
          <type><ref refid="structt__donjon" kindref="compound">t_donjon</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;affichage du donjon dans un terminal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon que l&apos;on veut afficher </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Joueur qui est dans le donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="532" column="1" bodyfile="src/donjon.c" bodystart="532" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1ad92853204a6a84645e490e03b982451d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur donjon_afficher_SDL</definition>
        <argsstring>(SDL_Renderer *renderer, t_donjon *donjon, t_entite *joueur)</argsstring>
        <name>donjon_afficher_SDL</name>
        <param>
          <type>SDL_Renderer *</type>
          <declname>renderer</declname>
        </param>
        <param>
          <type><ref refid="structt__donjon" kindref="compound">t_donjon</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <briefdescription>
<para>Fonction d&apos;affichage d&apos;un donjon avec la SDL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>renderer</parametername>
</parameternamelist>
<parameterdescription>
<para>Rendu de la fenêtre </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon que l&apos;on veut afficher </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Joueur qui est dans le donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="559" column="1" bodyfile="src/donjon.c" bodystart="559" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1a8a1eae23567ffde325e6669dffc7fc9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur donjon_gestion</definition>
        <argsstring>(SDL_Renderer *renderer, t_donjon *donjon, t_entite *joueur, uint8_t *ks, double coef_fps)</argsstring>
        <name>donjon_gestion</name>
        <param>
          <type>SDL_Renderer *</type>
          <declname>renderer</declname>
        </param>
        <param>
          <type><ref refid="structt__donjon" kindref="compound">t_donjon</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>ks</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coef_fps</declname>
        </param>
        <briefdescription>
<para>Permet de gérer un donjon comme la création et l&apos;interaction des mobs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>renderer</parametername>
</parameternamelist>
<parameterdescription>
<para>Rendu de la fenêtre </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon que l&apos;on veut gérer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Joueur qui est dans le donjon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ks</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointeur sur l&apos;état des touches </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coef_fps</parametername>
</parameternamelist>
<parameterdescription>
<para>Coefficient de retard de fps </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="609" column="1" bodyfile="src/donjon.c" bodystart="609" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1aafdabc099758c3305ccffad18869707c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur donjon_quitter</definition>
        <argsstring>(t_donjon *donjon, t_entite *joueur)</argsstring>
        <name>donjon_quitter</name>
        <param>
          <type><ref refid="structt__donjon" kindref="compound">t_donjon</ref> *</type>
          <declname>donjon</declname>
        </param>
        <param>
          <type><ref refid="structt__entite" kindref="compound">t_entite</ref> *</type>
          <declname>joueur</declname>
        </param>
        <briefdescription>
<para>Fonction pour quitter un donjon. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon que l&apos;on veut quitter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>Joueur qui veut quitter le donjon </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="798" column="1" bodyfile="src/donjon.c" bodystart="798" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="donjon_8c_1abde7f3f8fad222e1eabe14f5646b8358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>t_erreur</type>
        <definition>t_erreur donjon_detruire</definition>
        <argsstring>(t_donjon **donjon)</argsstring>
        <name>donjon_detruire</name>
        <param>
          <type><ref refid="structt__donjon" kindref="compound">t_donjon</ref> **</type>
          <declname>donjon</declname>
        </param>
        <briefdescription>
<para>Fonction de destruction d&apos;un donjon. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>donjon</parametername>
</parameternamelist>
<parameterdescription>
<para>Donjon que l&apos;on veut détruire </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Code erreur </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/donjon.c" line="824" column="1" bodyfile="src/donjon.c" bodystart="824" bodyend="846"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Module de création + de gestion d&apos;un donjon. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jasmin GALBRUN </para></simplesect>
<simplesect kind="version"><para>1 </para></simplesect>
<simplesect kind="date"><para>16/04/2019 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="chemin_8h" kindref="compound">chemin.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="liste_8h" kindref="compound">liste.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="erreur_8h" kindref="compound">erreur.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;commun.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="donjon_8h" kindref="compound">donjon.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="perlin_8h" kindref="compound">perlin.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="block_8h" kindref="compound">block.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="outils__SDL_8h" kindref="compound">outils_SDL.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="affichage_8h" kindref="compound">affichage.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="entite_8h" kindref="compound">entite.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="chemin_8h" kindref="compound">chemin.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ia_8h" kindref="compound">ia.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEPTH<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAILLE_SOL<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Prototypes<sp/>fonctions<sp/>non<sp/>accessible<sp/>pour<sp/>l&apos;utilisateur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_creer_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>**<sp/>salle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>t_type_salle_donjon<sp/>type);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_ajout_salle(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_voisin_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>selection_voisin(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>choix);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chercher_salle(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>update_voisin(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_donjon);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_creer_structure_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>donjon_detruire_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*salle);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_coord_depart(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>**<sp/>salle_dep);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>placer_salle_boss(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>creer_mob(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>salle_joueur(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/>SDL_Rect<sp/>pos_perso,<sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>**<sp/>salle_j);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>attaque(<ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>attaquant,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>cible);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">t_erreur<sp/><ref refid="donjon_8c_1af7c1579cda78be0576f9de57eea5063a" kindref="member">donjon_creer</ref>(<ref refid="structt__donjon" kindref="compound">t_donjon</ref><sp/>**<sp/>donjon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_salle,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_creer()<sp/>:<sp/>Double<sp/>poiteur<sp/>sur<sp/>la<sp/>liste<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nb_salle<sp/>&lt;=<sp/>1){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(VALUE_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;donjon_creer()<sp/>:<sp/>Nombre<sp/>de<sp/>salle<sp/>inferieur<sp/>ou<sp/>égal<sp/>à<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VALUE_ERROR;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Création<sp/>Donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>*donjon<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structt__donjon" kindref="compound">t_donjon</ref>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>(*donjon)-&gt;quitter<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>(*donjon)-&gt;donjon<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structt__liste" kindref="compound">t_liste</ref>));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1ae54cf55c0d15211e5433ce9b5abf099d" kindref="member">init_liste</ref>((*donjon)-&gt;donjon);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>sauvegarde<sp/>les<sp/>coordonnées<sp/>du<sp/>joueur<sp/>avant<sp/>d&apos;entrer<sp/>dans<sp/>le<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>(*donjon)-&gt;x_map_joueur<sp/>=<sp/>joueur-&gt;hitbox.x;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>(*donjon)-&gt;y_map_joueur<sp/>=<sp/>joueur-&gt;hitbox.y;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calcul<sp/>taille<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_donjon<sp/>=<sp/>nb_salle;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Création<sp/>Structure<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nb_salle--){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>donjon_ajout_salle((*donjon)-&gt;donjon,<sp/>taille_donjon,<sp/>joueur);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Placement<sp/>de<sp/>la<sp/>salle<sp/>du<sp/>boss<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>placer_salle_boss((*donjon)-&gt;donjon);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Création<sp/>structure<sp/>salle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="liste_8c_1a9a2af94927570339b5708b99c4831cf3" kindref="member">en_tete</ref>((*donjon)-&gt;donjon);<sp/>!<ref refid="liste_8c_1aa42eefd0ac04de255ffb11f5e9fdabd6" kindref="member">hors_liste</ref>((*donjon)-&gt;donjon);<sp/><ref refid="liste_8c_1ac95aadbae271f7e76ca486b6187dd8dd" kindref="member">suivant</ref>((*donjon)-&gt;donjon)){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4eaf58887e3dd578a2699aefc5963fe4" kindref="member">valeur_elt</ref>((*donjon)-&gt;donjon,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;salle);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>donjon_creer_structure_salle(salle);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Placement<sp/>du<sp/>joueur<sp/>au<sp/>début<sp/>du<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>donjon_coord_depart((*donjon)-&gt;donjon,<sp/>&amp;salle);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>joueur-&gt;hitbox.x<sp/>=<sp/>(salle-&gt;x<sp/>*<sp/>SIZE<sp/>+<sp/>(SIZE<sp/>/<sp/>3))<sp/>*<sp/>width_block_sdl;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>joueur-&gt;hitbox.y<sp/>=<sp/>(salle-&gt;y<sp/>*<sp/>MAX_SCREEN<sp/>+<sp/>(TAILLE_SOL))<sp/>*<sp/>height_block_sdl<sp/>+<sp/>joueur-&gt;hitbox.h;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_ajout_salle(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_ajout_salle()<sp/>:<sp/>Poiteur<sp/>sur<sp/>la<sp/>liste<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Création<sp/>salle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="liste_8c_1ae25051845f03a0ee659aed8e855dad5b" kindref="member">liste_vide</ref>(donjon)){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>donjon_creer_salle(&amp;salle,<sp/>taille_donjon<sp/>/<sp/>2,<sp/>taille_donjon<sp/>/<sp/>2,<sp/>DONJON_DEPART);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a8d7b14b429cf2009912b48ad88e4af3a" kindref="member">ajout_droit</ref>(donjon,<sp/>salle);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>sélectionne<sp/>une<sp/>salle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>chercher_salle(donjon,<sp/>joueur);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>tamp;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1aa916cb05c931c653d8b3710101bc8a43" kindref="member">valeur_liste</ref>(donjon,<sp/>i,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;tamp);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>sélectionne<sp/>une<sp/>case<sp/>voisine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choix;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>selection_voisin(tamp,<sp/>&amp;choix);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>tamp-&gt;x;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>tamp-&gt;y;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choix<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x--;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choix<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choix<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choix<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y--;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>crée<sp/>la<sp/>salle<sp/>puis<sp/>on<sp/>l&apos;ajoute<sp/>à<sp/>la<sp/>liste<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>donjon_creer_salle(&amp;salle,<sp/>x,<sp/>y,<sp/>DONJON_INTERMEDIAIRE);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a182d1a7bdc30807ebdd00d566994548d" kindref="member">en_queue</ref>(donjon);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a8d7b14b429cf2009912b48ad88e4af3a" kindref="member">ajout_droit</ref>(donjon,<sp/>salle);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>update_voisin(donjon,<sp/>taille_donjon);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_creer_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>**<sp/>salle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/>t_type_salle_donjon<sp/>type){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_creer_salle()<sp/>:<sp/>Doule<sp/>pointeur<sp/>sur<sp/>la<sp/>salle<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Création<sp/>salle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>*salle<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref>));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>(*salle)-&gt;x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>(*salle)-&gt;y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*salle)-&gt;voisin[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>(*salle)-&gt;type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>(*salle)-&gt;completed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>(*salle)-&gt;mob<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>sélectionne<sp/>une<sp/>difficulté<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>DONJON_DEPART){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*salle)-&gt;completed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*salle)-&gt;difficulte<sp/>=<sp/>AUCUNE;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/>DONJON_FIN){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*salle)-&gt;difficulte<sp/>=<sp/>FINAL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alea<sp/>=<sp/><ref refid="perlin_8h_1a0217acdda1d699354774af02e79d3f29" kindref="member">noise2</ref>(x,<sp/>y)<sp/>%<sp/>3;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(alea<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*salle)-&gt;difficulte<sp/>=<sp/>FACILE;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(alea<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*salle)-&gt;difficulte<sp/>=<sp/>MOYEN;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*salle)-&gt;difficulte<sp/>=<sp/>DIFFICILE;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_voisin_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle){</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;voisin[i]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>selection_voisin(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>choix){</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;selection_voisin()<sp/>:<sp/>Pointeur<sp/>sur<sp/>salle<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(choix<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;selection_voisin()<sp/>:<sp/>Pointeur<sp/>sur<sp/>choix<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>sélectionne<sp/>une<sp/>salle<sp/>inexistante<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>liste<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structt__liste" kindref="compound">t_liste</ref>));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1ae54cf55c0d15211e5433ce9b5abf099d" kindref="member">init_liste</ref>(liste);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;voisin[i]<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>tamp<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tamp<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a8d7b14b429cf2009912b48ad88e4af3a" kindref="member">ajout_droit</ref>(liste,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)tamp);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choix_voisin;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>choix_voisin<sp/>=<sp/><ref refid="perlin_8h_1a0217acdda1d699354774af02e79d3f29" kindref="member">noise2</ref>(salle-&gt;x,<sp/>salle-&gt;y)<sp/>%<sp/><ref refid="liste_8c_1a591fc3936d195adcc3fb62f521dcd2ed" kindref="member">taille_liste</ref>(liste);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*choix_inter;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1aa916cb05c931c653d8b3710101bc8a43" kindref="member">valeur_liste</ref>(liste,<sp/>choix_voisin,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;choix_inter);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>*choix<sp/>=<sp/>*choix_inter;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>libère<sp/>la<sp/>mémoire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4be7faf10eecc64ca729578b1b8cdbb4" kindref="member">detruire_liste</ref>(liste,<sp/>free);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>free(liste);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chercher_salle(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur){</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>sélectionne<sp/>une<sp/>salle<sp/>aléatoire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_l<sp/>=<sp/><ref refid="liste_8c_1a591fc3936d195adcc3fb62f521dcd2ed" kindref="member">taille_liste</ref>(donjon);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="perlin_8h_1a0217acdda1d699354774af02e79d3f29" kindref="member">noise2</ref>(joueur-&gt;hitbox.x,<sp/>joueur-&gt;hitbox.y)<sp/>%<sp/>taille_l;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>cherche<sp/>une<sp/>salle<sp/>ayant<sp/>au<sp/>moins<sp/>1<sp/>voisin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verif<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!verif){</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1aa916cb05c931c653d8b3710101bc8a43" kindref="member">valeur_liste</ref>(donjon,<sp/>i,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;salle);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nb_voisin_salle(salle)<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&gt;=<sp/>taille_l<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verif<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>update_voisin(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_donjon){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;update_voisin()<sp/>:<sp/>Pointeur<sp/>sur<sp/>donjon<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mise<sp/>à<sp/>jour<sp/>des<sp/>voisins<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*salle_courante,<sp/>*salle_suivante;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="liste_8c_1a591fc3936d195adcc3fb62f521dcd2ed" kindref="member">taille_liste</ref>(donjon);<sp/>i++){</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1aa916cb05c931c653d8b3710101bc8a43" kindref="member">valeur_liste</ref>(donjon,<sp/>i,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;salle_courante);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="liste_8c_1a9a2af94927570339b5708b99c4831cf3" kindref="member">en_tete</ref>(donjon);<sp/>!<ref refid="liste_8c_1aa42eefd0ac04de255ffb11f5e9fdabd6" kindref="member">hors_liste</ref>(donjon);<sp/><ref refid="liste_8c_1ac95aadbae271f7e76ca486b6187dd8dd" kindref="member">suivant</ref>(donjon)){</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4eaf58887e3dd578a2699aefc5963fe4" kindref="member">valeur_elt</ref>(donjon,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;salle_suivante);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante<sp/>!=<sp/>salle_suivante){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;y<sp/>==<sp/>salle_suivante-&gt;y){</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;x<sp/>-<sp/>1<sp/>==<sp/>salle_suivante-&gt;x){</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_suivante-&gt;voisin[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;x<sp/>+<sp/>1<sp/>==<sp/>salle_suivante-&gt;x){</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_suivante-&gt;voisin[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;x<sp/>==<sp/>salle_suivante-&gt;x){</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;y<sp/>-<sp/>1<sp/>==<sp/>salle_suivante-&gt;y){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_suivante-&gt;voisin[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;y<sp/>+<sp/>1<sp/>==<sp/>salle_suivante-&gt;y){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_suivante-&gt;voisin[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bordure<sp/>du<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;x<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;x<sp/>==<sp/>taille_donjon<sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;y<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[3]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_courante-&gt;y<sp/>==<sp/>taille_donjon<sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_courante-&gt;voisin[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_creer_structure_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle){</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_creer_structure_salle()<sp/>:<sp/>Pointeur<sp/>sur<sp/>salle<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>structure<sp/>salle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>liste<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structt__liste" kindref="compound">t_liste</ref>));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1ae54cf55c0d15211e5433ce9b5abf099d" kindref="member">init_liste</ref>(liste);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>salle-&gt;structure<sp/>=<sp/>liste;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Création<sp/>structure<sp/>salle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__block" kindref="compound">t_block</ref><sp/>*<sp/>tab<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SIZE;<sp/>i++){</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Génération<sp/>d&apos;une<sp/>colonne<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structt__block" kindref="compound">t_block</ref>)<sp/>*<sp/>MAX_SCREEN);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hauteur;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Génération<sp/>relief<sp/>plafond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hauteur<sp/>=<sp/><ref refid="perlin_8h_1a2af0d3d29624c62a028497de1bdadcbe" kindref="member">perlin2d</ref>(i,<sp/>salle-&gt;x<sp/>*<sp/>salle-&gt;y,<sp/>FREQ<sp/>*<sp/>5,<sp/>DEPTH)<sp/>*<sp/>(MAX_SCREEN)<sp/>+<sp/>(MAX_SCREEN<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hauteur<sp/>&gt;=<sp/>MAX_SCREEN<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hauteur<sp/>=<sp/>MAX_SCREEN<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MAX_SCREEN;<sp/>j++){</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].x<sp/>=<sp/>salle-&gt;x<sp/>*<sp/>SIZE<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].y<sp/>=<sp/>salle-&gt;y<sp/>*<sp/>MAX_SCREEN<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trou<sp/>échelle<sp/>Plafond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j<sp/>&gt;=<sp/>hauteur<sp/>&amp;&amp;<sp/>(i<sp/>==<sp/>SIZE<sp/>/<sp/>2<sp/>||<sp/>i<sp/>==<sp/>SIZE<sp/>/<sp/>2<sp/>+<sp/>1)<sp/>&amp;&amp;<sp/>salle-&gt;voisin[1]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].id<sp/>=<sp/>AIR;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trou<sp/>échelle<sp/>sol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j<sp/>&lt;=<sp/>TAILLE_SOL<sp/>&amp;&amp;<sp/>(i<sp/>==<sp/>SIZE<sp/>/<sp/>2<sp/>||<sp/>i<sp/>==<sp/>SIZE<sp/>/<sp/>2<sp/>+<sp/>1)<sp/>&amp;&amp;<sp/>salle-&gt;voisin[3]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].id<sp/>=<sp/>AIR;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trou<sp/>mur<sp/>gauche<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j<sp/>&lt;<sp/>MAX_SCREEN<sp/>/<sp/>1.7<sp/>&amp;&amp;<sp/>j<sp/>&gt;<sp/>TAILLE_SOL<sp/>&amp;&amp;<sp/>i<sp/>==<sp/>SIZE<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>salle-&gt;voisin[2]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].id<sp/>=<sp/>AIR;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trou<sp/>mur<sp/>droite<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j<sp/>&lt;<sp/>MAX_SCREEN<sp/>/<sp/>1.7<sp/>&amp;&amp;<sp/>j<sp/>&gt;<sp/>TAILLE_SOL<sp/>&amp;&amp;<sp/>i<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>salle-&gt;voisin[0]<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].id<sp/>=<sp/>AIR;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Le<sp/>reste<sp/>des<sp/>murs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j<sp/>&gt;=<sp/>hauteur<sp/>||<sp/>j<sp/>&lt;=<sp/>TAILLE_SOL<sp/>||<sp/>i<sp/>==<sp/>0<sp/>||<sp/>i<sp/>==<sp/>SIZE<sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].id<sp/>=<sp/>ROCHE;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].id<sp/>=<sp/>AIR;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tab[j].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>AIR)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].plan<sp/>=<sp/>ARRIERE_PLAN;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[j].plan<sp/>=<sp/>PREMIER_PLAN;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a182d1a7bdc30807ebdd00d566994548d" kindref="member">en_queue</ref>(liste);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a8d7b14b429cf2009912b48ad88e4af3a" kindref="member">ajout_droit</ref>(liste,<sp/>tab);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>donjon_coord_depart(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>**<sp/>salle_dep){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_dep<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>cherche<sp/>le<sp/>départ<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="liste_8c_1a9a2af94927570339b5708b99c4831cf3" kindref="member">en_tete</ref>(donjon);<sp/>!<ref refid="liste_8c_1aa42eefd0ac04de255ffb11f5e9fdabd6" kindref="member">hors_liste</ref>(donjon)<sp/>&amp;&amp;<sp/>(salle<sp/>==<sp/>NULL<sp/>||<sp/>salle-&gt;type<sp/>!=<sp/>DONJON_DEPART);<sp/><ref refid="liste_8c_1ac95aadbae271f7e76ca486b6187dd8dd" kindref="member">suivant</ref>(donjon)){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4eaf58887e3dd578a2699aefc5963fe4" kindref="member">valeur_elt</ref>(donjon,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;salle);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>met<sp/>à<sp/>jour<sp/>les<sp/>coordonnées<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>*salle_dep<sp/>=<sp/>salle;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>placer_salle_boss(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon){</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>On<sp/>sélectionne<sp/>la<sp/>salle<sp/>la<sp/>plus<sp/>loin<sp/>de<sp/>la<sp/>salle<sp/>de<sp/>départ<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle_dep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>donjon_coord_depart(donjon,<sp/>&amp;salle_dep);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle_max<sp/>=<sp/>salle_dep;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="liste_8c_1a9a2af94927570339b5708b99c4831cf3" kindref="member">en_tete</ref>(donjon);<sp/>!<ref refid="liste_8c_1aa42eefd0ac04de255ffb11f5e9fdabd6" kindref="member">hors_liste</ref>(donjon);<sp/><ref refid="liste_8c_1ac95aadbae271f7e76ca486b6187dd8dd" kindref="member">suivant</ref>(donjon)){</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4eaf58887e3dd578a2699aefc5963fe4" kindref="member">valeur_elt</ref>(donjon,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;salle);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>norme<sp/>=<sp/>(salle-&gt;x<sp/>-<sp/>salle_dep-&gt;x)<sp/>*<sp/>(salle-&gt;y<sp/>-<sp/>salle_dep-&gt;y);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>norme2<sp/>=<sp/>(salle_max-&gt;x<sp/>-<sp/>salle_dep-&gt;x)<sp/>*<sp/>(salle_max-&gt;y<sp/>-<sp/>salle_dep-&gt;y);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;salle:<sp/>x=%d,<sp/>y=%d<sp/>|<sp/>max:<sp/>x=%d,<sp/>y=%d<sp/>|<sp/>dep:<sp/>x=%d,<sp/>y=%d\n&quot;,<sp/>salle-&gt;x,<sp/>salle-&gt;y,<sp/>salle_max-&gt;x,<sp/>salle_max-&gt;y,<sp/>salle_dep-&gt;x,<sp/>salle_dep-&gt;y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(norme<sp/>&gt;<sp/>norme2){</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle_max<sp/>=<sp/>salle;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>salle_max-&gt;type<sp/>=<sp/>DONJON_FIN;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>salle_max-&gt;difficulte<sp/>=<sp/>FINAL;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>salle_joueur(<ref refid="structt__liste" kindref="compound">t_liste</ref><sp/>*<sp/>donjon,<sp/>SDL_Rect<sp/>pos_perso,<sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>**<sp/>salle_j){</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;salle_joueur()<sp/>:<sp/>Pointeur<sp/>sur<sp/>donjon<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle_j<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;salle_joueur()<sp/>:<sp/>Double<sp/>pointeur<sp/>sur<sp/>salle_j<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Coordonnées<sp/>de<sp/>la<sp/>salle<sp/>où<sp/>se<sp/>trouve<sp/>le<sp/>joueur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_salle<sp/>=<sp/>(float)(pos_perso.x<sp/>/<sp/>width_block_sdl)<sp/>/<sp/>SIZE;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_salle<sp/>=<sp/>(float)(pos_perso.y<sp/>/<sp/>height_block_sdl)<sp/>/<sp/>MAX_SCREEN;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//On<sp/>cherche<sp/>la<sp/>salle<sp/>dans<sp/>le<sp/>donjon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="liste_8c_1a9a2af94927570339b5708b99c4831cf3" kindref="member">en_tete</ref>(donjon);<sp/>!<ref refid="liste_8c_1aa42eefd0ac04de255ffb11f5e9fdabd6" kindref="member">hors_liste</ref>(donjon)<sp/>&amp;&amp;<sp/>(salle<sp/>==<sp/>NULL<sp/>||<sp/>(salle-&gt;x<sp/>!=<sp/>x_salle<sp/>||<sp/>salle-&gt;y<sp/>!=<sp/>y_salle));<sp/><ref refid="liste_8c_1ac95aadbae271f7e76ca486b6187dd8dd" kindref="member">suivant</ref>(donjon)){</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4eaf58887e3dd578a2699aefc5963fe4" kindref="member">valeur_elt</ref>(donjon,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;salle);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>*salle_j<sp/>=<sp/>salle;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">t_erreur<sp/><ref refid="donjon_8c_1a58610b3b3acb6edfdbdc92ccfbff1a1b" kindref="member">donjon_afficher_Term</ref>(<ref refid="structt__donjon" kindref="compound">t_donjon</ref><sp/>*<sp/>donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur){</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_afficher_Term()<sp/>:<sp/>Pointeur<sp/>sur<sp/>donjon<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon-&gt;quitter<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affichage<sp/>du<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>salle_joueur(donjon-&gt;donjon,<sp/>joueur-&gt;hitbox,<sp/>&amp;salle);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="affichage_8c_1ab1833fe0bc53d1fbb83d155b40724f56" kindref="member">AFF_map_term</ref>(salle-&gt;structure,<sp/>0,<sp/>SIZE-1);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal">t_erreur<sp/><ref refid="donjon_8c_1ad92853204a6a84645e490e03b982451d" kindref="member">donjon_afficher_SDL</ref>(SDL_Renderer<sp/>*<sp/>renderer,<sp/><ref refid="structt__donjon" kindref="compound">t_donjon</ref><sp/>*<sp/>donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur){</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_afficher_SDL()<sp/>:<sp/>Pointeur<sp/>sur<sp/>donjon<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(renderer<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_afficher_SDL()<sp/>:<sp/>Pointeur<sp/>sur<sp/>renderer<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon-&gt;quitter<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Affichage<sp/>du<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>salle_joueur(donjon-&gt;donjon,<sp/>joueur-&gt;hitbox,<sp/>&amp;salle);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AFF_map_sdl(fenetre,<sp/>renderer,<sp/>-1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0,<sp/><ref refid="liste_8c_1a9a2af94927570339b5708b99c4831cf3" kindref="member">en_tete</ref>(salle-&gt;structure);<sp/>!<ref refid="liste_8c_1aa42eefd0ac04de255ffb11f5e9fdabd6" kindref="member">hors_liste</ref>(salle-&gt;structure);<sp/><ref refid="liste_8c_1ac95aadbae271f7e76ca486b6187dd8dd" kindref="member">suivant</ref>(salle-&gt;structure),<sp/>j++){</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Texture<sp/>*<sp/>texture<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structt__block" kindref="compound">t_block</ref><sp/>*<sp/>colonne<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4eaf58887e3dd578a2699aefc5963fe4" kindref="member">valeur_elt</ref>(salle-&gt;structure,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;colonne);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MAX_SCREEN;<sp/>i++){</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture<sp/>=<sp/><ref refid="block_8c_1abfc4c7532ca8f494ffa3e70e5aa3bb3e" kindref="member">BLOCK_GetTexture_sdl</ref>(colonne[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Rect<sp/>r<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>*<sp/>width_block_sdl,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(MAX_SCREEN<sp/>-<sp/>1<sp/>-<sp/>i)<sp/>*<sp/>height_block_sdl,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width_block_sdl,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_block_sdl</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_RenderCopy(renderer,<sp/>texture,<sp/>NULL,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">t_erreur<sp/><ref refid="donjon_8c_1a8a1eae23567ffde325e6669dffc7fc9c" kindref="member">donjon_gestion</ref>(SDL_Renderer<sp/>*<sp/>renderer,<sp/><ref refid="structt__donjon" kindref="compound">t_donjon</ref><sp/>*<sp/>donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur,<sp/>uint8_t<sp/>*ks,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coef_fps){</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(renderer<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_gestion()<sp/>:<sp/>Pointeur<sp/>sur<sp/>renderer<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_gestion()<sp/>:<sp/>Pointeur<sp/>sur<sp/>donjon<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(joueur<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_gestion()<sp/>:<sp/>Pointeur<sp/>sur<sp/>joueur<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon-&gt;quitter<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>salle_joueur(donjon-&gt;donjon,<sp/>joueur-&gt;hitbox,<sp/>&amp;salle);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>ref<sp/>=<sp/><ref refid="entite_8c_1a85fdafbe9f3042643dca822bbfb7101c" kindref="member">creer_entite_defaut</ref>(</highlight><highlight class="stringliteral">&quot;ref&quot;</highlight><highlight class="normal">,<sp/>JOUEUR,<sp/>(salle-&gt;x<sp/>*<sp/>SIZE)<sp/>+<sp/>(SIZE<sp/>/<sp/>2),<sp/>(salle-&gt;y<sp/>*<sp/>MAX_SCREEN)<sp/>+<sp/>(MAX_SCREEN<sp/>/<sp/>2),<sp/>2<sp/>*<sp/>height_block_sdl);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gestion<sp/>Joueur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="entite_8c_1af3ace6db92e0c66ddb230d5e9c602146" kindref="member">Gestion_Entite</ref>(renderer,<sp/>joueur,<sp/>ks,<sp/>coef_fps,<sp/>salle-&gt;structure,<sp/>GESTION_TOUCHES,<sp/>ALL_ACTION,<sp/>ref,<sp/>NOT_CENTER_SCREEN);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gestion<sp/>mob<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;completed<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Création<sp/>mob<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;mob<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle-&gt;mob<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structt__liste" kindref="compound">t_liste</ref>));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1ae54cf55c0d15211e5433ce9b5abf099d" kindref="member">init_liste</ref>(salle-&gt;mob);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>creer_mob(salle,<sp/>joueur);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>mob<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t_action<sp/>action;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mob<sp/>jouer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="liste_8c_1a9a2af94927570339b5708b99c4831cf3" kindref="member">en_tete</ref>(salle-&gt;mob);<sp/>!<ref refid="liste_8c_1aa42eefd0ac04de255ffb11f5e9fdabd6" kindref="member">hors_liste</ref>(salle-&gt;mob);<sp/><ref refid="liste_8c_1ac95aadbae271f7e76ca486b6187dd8dd" kindref="member">suivant</ref>(salle-&gt;mob)){</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4eaf58887e3dd578a2699aefc5963fe4" kindref="member">valeur_elt</ref>(salle-&gt;mob,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;mob);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mob-&gt;pv<sp/>&gt;<sp/>0<sp/>||<sp/>mob-&gt;type<sp/>==<sp/>BOSS){</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_salle_mob<sp/>=<sp/>(mob-&gt;hitbox.x<sp/>/<sp/>width_block_sdl)<sp/>/<sp/>SIZE;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x_salle_mob<sp/>&lt;<sp/>salle-&gt;x){</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/>MARCHE_DROITE;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x_salle_mob<sp/>&gt;<sp/>salle-&gt;x){</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/>MARCHE_GAUCHE;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/><ref refid="ia_8c_1a8632f51cc798445e4fe6cdc3159a103d" kindref="member">ia_jouer</ref>(mob,<sp/>joueur,<sp/>IA_ALEATOIRE);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attaque(joueur,<sp/>mob);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attaque(mob,<sp/>joueur);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1a1011035c5ea8e6d6802e9196c79e7a9b" kindref="member">update_posY_entite</ref>(mob,<sp/>coef_fps,<sp/>salle-&gt;structure,<sp/>NOT_CENTER_SCREEN);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1af3ace6db92e0c66ddb230d5e9c602146" kindref="member">Gestion_Entite</ref>(renderer,<sp/>mob,<sp/>ks,<sp/>coef_fps,<sp/>salle-&gt;structure,<sp/>GESTION_ACTION,<sp/>action,<sp/>ref,<sp/>NOT_CENTER_SCREEN);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle-&gt;completed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;type<sp/>==<sp/>DONJON_FIN){</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>donjon-&gt;quitter<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Libération<sp/>Mémoire<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="entite_8c_1aff126a9685fdd63884131ba74499aa17" kindref="member">detruire_entite</ref>(ref);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>creer_mob(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*<sp/>salle,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur){</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;creer_mob()<sp/>:<sp/>Pointeur<sp/>sur<sp/>salle<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;mob<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;creer_mob()<sp/>:<sp/>Pointeur<sp/>sur<sp/>salle-&gt;mob<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(joueur<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;creer_mob()<sp/>:<sp/>Pointeur<sp/>sur<sp/>joueur<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialisation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_mob<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>coef;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>mob<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;difficulte<sp/>==<sp/>AUCUNE){</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;difficulte<sp/>==<sp/>FACILE)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;difficulte<sp/>==<sp/>MOYEN)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef<sp/>=<sp/>1.5;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;difficulte<sp/>==<sp/>DIFFICILE)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef<sp/>=<sp/>2.5;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_mob<sp/>=<sp/>rand()<sp/>%<sp/>1<sp/>+<sp/>3;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_mob<sp/>*=<sp/>coef;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_mob<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taille_boss<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posX_mob<sp/>=<sp/>salle-&gt;x<sp/>*<sp/>SIZE<sp/>+<sp/>SIZE<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posY_mob<sp/>=<sp/>(salle-&gt;y<sp/>*<sp/>MAX_SCREEN)<sp/>+<sp/>TAILLE_SOL<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nb_mob--){</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mob<sp/>=<sp/><ref refid="entite_8c_1a85fdafbe9f3042643dca822bbfb7101c" kindref="member">creer_entite_defaut</ref>(</highlight><highlight class="stringliteral">&quot;Mob&quot;</highlight><highlight class="normal">,<sp/>ZOMBIE,<sp/>posX_mob,<sp/>posY_mob<sp/>+<sp/>taille_mob,<sp/>taille_mob<sp/>*<sp/>height_block_sdl);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1ac6434d3673e494cb263956b914e72e55" kindref="member">Change_Damage_Entite</ref>(mob,<sp/>7);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1af3fba054ced5c6f065aa9c163c6a7c63" kindref="member">Change_PV_Entite</ref>(mob,<sp/>50,<sp/>50);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a182d1a7bdc30807ebdd00d566994548d" kindref="member">en_queue</ref>(salle-&gt;mob);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a8d7b14b429cf2009912b48ad88e4af3a" kindref="member">ajout_droit</ref>(salle-&gt;mob,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)mob);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;type<sp/>==<sp/>DONJON_FIN){</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mob<sp/>=<sp/><ref refid="entite_8c_1a85fdafbe9f3042643dca822bbfb7101c" kindref="member">creer_entite_defaut</ref>(</highlight><highlight class="stringliteral">&quot;BOSS&quot;</highlight><highlight class="normal">,<sp/>BOSS,<sp/>posX_mob,<sp/>posY_mob<sp/>+<sp/>taille_boss,<sp/>taille_boss<sp/>*<sp/>height_block_sdl);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1ac6434d3673e494cb263956b914e72e55" kindref="member">Change_Damage_Entite</ref>(mob,<sp/>25);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1af3fba054ced5c6f065aa9c163c6a7c63" kindref="member">Change_PV_Entite</ref>(mob,<sp/>150,<sp/>150);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a182d1a7bdc30807ebdd00d566994548d" kindref="member">en_queue</ref>(salle-&gt;mob);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a8d7b14b429cf2009912b48ad88e4af3a" kindref="member">ajout_droit</ref>(salle-&gt;mob,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)mob);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>t_erreur<sp/>attaque(<ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>attaquant,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>cible){</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attaquant<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;attaque()<sp/>:<sp/>Pointeur<sp/>sur<sp/>attaquant<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cible<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;attaque()<sp/>:<sp/>Pointeur<sp/>sur<sp/>attaquant<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attaquant-&gt;type<sp/>==<sp/>JOUEUR){</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mouseX,<sp/>mouseY;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_GetMouseState(&amp;mouseX,<sp/>&amp;mouseY);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Point<sp/>p<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseX,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mouseY</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SDL_PointInRect(&amp;p,<sp/>&amp;(cible-&gt;posEnt))){</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(attaquant-&gt;hitbox.x<sp/>-<sp/>cible-&gt;hitbox.x)<sp/>&lt;=<sp/>2<sp/>*<sp/>width_block_sdl){</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(attaquant-&gt;hitbox.y<sp/>-<sp/>cible-&gt;hitbox.y)<sp/>&lt;=<sp/>2<sp/>*<sp/>height_block_sdl){</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1a7b25b9a9d7f481637d5029ae3efbb45b" kindref="member">Add_PV_Entite</ref>(cible,<sp/>-(attaquant-&gt;damage));</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attaquant-&gt;act_pred<sp/>==<sp/>ATTAQUE_DROITE<sp/>&amp;&amp;<sp/>cible-&gt;hitbox.x<sp/>&gt;=<sp/>attaquant-&gt;hitbox.x){</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1a7b25b9a9d7f481637d5029ae3efbb45b" kindref="member">Add_PV_Entite</ref>(cible,<sp/>-(attaquant-&gt;damage));</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(attaquant-&gt;act_pred<sp/>==<sp/>ATTAQUE_GAUCHE<sp/>&amp;&amp;<sp/>cible-&gt;hitbox.x<sp/>&lt;=<sp/>attaquant-&gt;hitbox.x){</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="entite_8c_1a7b25b9a9d7f481637d5029ae3efbb45b" kindref="member">Add_PV_Entite</ref>(cible,<sp/>-(attaquant-&gt;damage));</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal">t_erreur<sp/><ref refid="donjon_8c_1aafdabc099758c3305ccffad18869707c" kindref="member">donjon_quitter</ref>(<ref refid="structt__donjon" kindref="compound">t_donjon</ref><sp/>*<sp/>donjon,<sp/><ref refid="structt__entite" kindref="compound">t_entite</ref><sp/>*<sp/>joueur){</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_quitter()<sp/>:<sp/>Pointeur<sp/>sur<sp/>donjon<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(joueur<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_quitter()<sp/>:<sp/>Pointeur<sp/>sur<sp/>joueur<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon-&gt;quitter<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>joueur-&gt;hitbox.x<sp/>=<sp/>donjon-&gt;x_map_joueur;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>joueur-&gt;hitbox.y<sp/>=<sp/>donjon-&gt;y_map_joueur;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="donjon_8c_1abde7f3f8fad222e1eabe14f5646b8358" kindref="member">donjon_detruire</ref>(&amp;donjon);</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal">t_erreur<sp/><ref refid="donjon_8c_1abde7f3f8fad222e1eabe14f5646b8358" kindref="member">donjon_detruire</ref>(<ref refid="structt__donjon" kindref="compound">t_donjon</ref><sp/>**donjon){</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vérification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="erreur_8c_1a86eae7e8299b116054bf5168b60fa3fb" kindref="member">erreur_save</ref>(PTR_NULL,<sp/></highlight><highlight class="stringliteral">&quot;donjon_detruire()<sp/>:<sp/>Double<sp/>pointeur<sp/>sur<sp/>liste<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTR_NULL;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*donjon<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destruction<sp/>donjon<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4be7faf10eecc64ca729578b1b8cdbb4" kindref="member">detruire_liste</ref>((*donjon)-&gt;donjon,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)donjon_detruire_salle);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*donjon)-&gt;donjon<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((*donjon)-&gt;donjon);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*donjon)-&gt;donjon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>free(*donjon);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>*donjon<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>donjon_detruire_salle(<ref refid="structt__salle__donjon" kindref="compound">t_salle_donjon</ref><sp/>*salle){</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;structure<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destruction<sp/>structure<sp/>salle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4be7faf10eecc64ca729578b1b8cdbb4" kindref="member">detruire_liste</ref>(salle-&gt;structure,<sp/>free);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(salle-&gt;structure);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle-&gt;structure<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(salle-&gt;mob<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Destruction<sp/>mobs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="liste_8c_1a4be7faf10eecc64ca729578b1b8cdbb4" kindref="member">detruire_liste</ref>(salle-&gt;mob,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="entite_8c_1aff126a9685fdd63884131ba74499aa17" kindref="member">detruire_entite</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(salle-&gt;mob);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>salle-&gt;mob<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(salle);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/donjon.c"/>
  </compounddef>
</doxygen>
